# {{ swagger_data.info.title }}

{% macro render_schema(schema, indent = 0) %}
  {% if "$ref" in schema %}
{{ render_ref(schema["$ref"]) }}
  {% elif "type" in schema %}
    {% if schema["type"] == "array" %}
      {% set subtype = "?" %}
      {% if "items" in schema and "type" in schema["items"] %}
        {% set subtype = schema["items"]["type"] %}
      {% endif %}
*Array*
      {% if schema.description %}
{{ schema.description | indent(indent, True) }}
      {% endif %}
      {% if "items" in schema %}
items: {{ render_schema(schema["items"], indent + 2) }}
      {% endif %}
    {% elif schema["type"] == "object" %}
*(object)* {% if schema.description %}{{ schema.description | indent(indent, True) }}
{% endif %}
      {% if "properties" in schema %}
        {% for property, property_data in schema["properties"] | dictsort %}
  - **{{ property }}** {{ render_schema(property_data, indent + 2) }}
        {% endfor %}
      {% endif %}
    {% else %}
*({{ schema["type"] }})*{% if schema.description %}: {{ schema.description }}{% endif %}
    {% endif %}
  {% endif %}
{% endmacro %}


{% macro render_item(item, item_data) %}
  {% if item == "$ref" %}
- {{ render_ref(item_data) }}
  {% else %}
- {{ item }}: {{ item_data }}
  {% endif %}
{% endmacro %}

{% macro render_items(items, indent = 0) %}
  {% for item, item_data in items | dictsort %}
{{ render_item(item, item_data) | indent(indent, True) }}
  {% endfor %}
{% endmacro %}

{% macro render_property(property, property_data, is_required = False) %}
  {% if property == "$ref" %}
- {{ render_ref(property_data) }}
  {% elif "$ref" in property_data and property_data | length == 1 %}
- {{ render_ref(property_data["$ref"]) }}{% if is_required %}\*{% endif %}
  {% elif "allOf" in property_data and property_data | length == 1 %}
- {{ render_ref(property_data["allOf"][0]["$ref"]) }}{% if is_required %}\*{% endif %}
  {% else %}
- **{{ property }}**{% if is_required %}\*{% endif %}{% if property_data.type%} *({{ property_data.type }})*{% endif %}{% if property_data.readOnly%} *(readonly)*{% endif %}{% if "default" in property_data%} *(default={{ property_data.default | tojson }})*{% endif %}{% if property_data.description %}: {{ property_data.description }}{% endif %}
  {% endif %}
{% endmacro %}

{% macro render_properties(properties, required = [], indent = 0) %}
  {% for property, property_data in properties | dictsort %}
{{ render_property(property, property_data, property in required) | indent(indent, True)}}
{% if "properties" in property_data %}
{{ render_properties(property_data.properties) | indent(indent+2, True) }}
{% elif "items" in property_data %}
{{ render_items(property_data["items"]) | indent(indent+2, True) }}
{% endif %}
  {% endfor %}
{% endmacro %}

{% macro render_definitions(definitions, level = 0) %}
  {% for ref, definition in definitions | dictsort %}
{% if definition %}
{{ "#######"[:level] + " " + ref }}

{% set object = definition %}
{% set bases = [] %}

{% if "type" not in definition and "allOf" not in definition and "properties" not in definition %}
{{ render_definitions(definition, level+1) }}
{% else %}
{% if definition.allOf %}
{% for base in definition.allOf %}
{% if "$ref" in base %}
{% do bases.append(base["$ref"]) %}
{% else %}
{% do object.update(base) %}
{% endif %}
{% endfor %}
{% endif %}
{% endif %}

{% if object.description %}
{{ definition.description }}
{% endif %}

{% if bases %}
{{ "#######"[:level] + "# INHERITED" }}

{% for base in bases %}
{{ render_ref(base) }}
{% endfor %}
{% endif %}

{% if object.properties %}
{{ "#######"[:level] + "# PROPERTIES" }}

{{ render_properties(object.properties, object.required, 2) }}
{% endif %}
{% endif %}
  {% endfor %}
{% endmacro %}

{% macro ensure_full_stop(text) %}{% if text.endswith('.') %}{{ text }}{% else %}{{ text }}.{% endif %}{%endmacro%}

{% macro render_ref(ref) %}{{ make_ref(ref.replace("#/definitions/", "")) }}{% endmacro %}

{% macro make_ref(ref) %}[{{ref}}](#{{ ref | make_id }}){% endmacro %}


**Version**: {{ swagger_data.info.version }}




## Table of Contents

{% for h in swagger_data.info.description | get_headers %}
* {{ make_ref(h) }}
{% endfor %}
* [Paths](#paths)
{% for path, methods in swagger_data.paths | dictsort %}
  {% for method, method_data in methods | dictsort %}
{% set endpoint = method | upper + " " + path %}
  * {{ make_ref(endpoint) }}
  {% endfor %}
{% endfor %}
* [Definitions](#definitions)
{% for ref, definition in swagger_data.definitions | dictsort %}
{% if definition %}
  * {{ make_ref(ref) }}
{% endif %}
{% endfor %}


## Description

{{ swagger_data.info.description }}


## Information

{% if swagger_data.schemes | length > 1 %}
**Schemes**:

  {% for scheme in swagger_data.schemes %}
  - {{ scheme }}
  {% endfor %}
{% elif swagger_data.schemes | length == 1 %}
**Scheme**: {{ swagger_data.schemes[0] }}
{% endif %}

{% if swagger_data.consumes | length > 1 %}
**Consumes**:

  {% for consume in swagger_data.consumes %}
  - {{ consume }}
  {% endfor %}
{% elif swagger_data.consumes | length == 1 %}
**Consumes**: {{ swagger_data.consumes[0] }}
{% endif %}

{% if swagger_data.produces | length > 1 %}
**Produces**:

  {% for produce in swagger_data.produces %}
  - {{ produce }}
  {% endfor %}
{% elif swagger_data.produces | length == 1 %}
**Produces**: {{ swagger_data.produces[0] }}
{% endif %}

{% if swagger_file %}
**Swagger File**: [swagger.json]({{ swagger_file }})
{% elif swagger_uri %}
**Swagger File**: [swagger.json]({{ swagger_uri }})
{% endif %}



## Paths

{% for path, methods in swagger_data.paths | dictsort %}
  {% for method, method_data in methods | dictsort %}
{% set endpoint = method | upper + " " + path %}

### {{ endpoint }}


{% if method_data.description %}
{{ method_data.description }}
{% elif method_data.summary %}
{{ ensure_full_stop(method_data.summary) }}
{% endif %}

{% if method_data.parameters %}
  {% set query_params = [] %}
  {% for param in method_data.parameters if param.in == "query" %}
    {% do query_params.append(param) %}
  {% endfor %}

  {% set path_params = [] %}
  {% for param in method_data.parameters if param.in == "path" %}
    {% do path_params.append(param) %}
  {% endfor %}

  {% set body_params = [] %}
  {% for param in method_data.parameters if param.in == "body" %}
    {% do body_params.append(param) %}
  {% endfor %}
{% endif %}

{% if path_params %}
#### Path Params:
  {% for param in path_params %}
- **{{ param.name }}** [{{ param.type }}]{% if "description" in param %}: {{ ensure_full_stop(param.description) }}{% endif %}

  {% endfor %}
{% endif %}

{% if query_params %}
#### Query Params:
{% for param in query_params %}
- **{{ param.name }}** [{{ param.type }}]{% if "description" in param %}: {{ ensure_full_stop(param.description) }}{% endif %}

{% endfor %}
{% endif %}

{% if body_params %}
#### Request body:
  {% for param in body_params %}

  {% if "description" in param %}
##### Description:
{{ param.description }}
  {% endif %}

##### Data:
{{ render_schema(param.schema, 2) }}

  {% endfor %}
{% endif %}

#### Responses:
    {% for response_code, response_data in method_data.responses | dictsort %}
  - {{ response_code }}: {{ response_data.description }}
      {% if "schema" in response_data %}

{{ render_schema(response_data.schema) | indent(4,True) }}
      {% endif %}
    {% endfor %}

  {% endfor %}
{% endfor %}


## Definitions

{{ render_definitions(swagger_data.definitions, 3) }}